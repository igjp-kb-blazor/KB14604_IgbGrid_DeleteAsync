<div style="max-width: 900px; margin: auto; padding: 24px; display: flex; flex-direction: column; gap: 24px;">
    <IgbGrid Data="_people"
             @ref="grid"
             Height="400px"
             PrimaryKey="@nameof(Person.Id)"
             AutoGenerate="false"
             RowSelection="GridSelectionMode.Single"
             HideRowSelectors>
        <IgbColumn Field="@nameof(Person.Name)" Header="氏名"></IgbColumn>
        <IgbColumn Field="@nameof(Person.Age)" Header="年齢" DataType="GridColumnDataType.Number"></IgbColumn>
        <IgbColumn Field="@nameof(Person.JobTitle)" Header="職種"></IgbColumn>
    </IgbGrid>
    <div>
        <IgbButton @onclick="OnClickRowDelete">
            選択行の削除
        </IgbButton>
    </div>
</div>

@code {
    private IgbGrid? grid;
    private async Task OnClickRowDelete()
    {
        if (this.grid is null) return;
        var person = this.grid.SelectedRows?.FirstOrDefault() as Person;

        if (person is null) return;
        await this.grid.DeleteRowAsync(person.Id);
    }

    public class Person
    {
        public int Id { get; set; }
        public string? Name { get; set; }
        public int Age { get; set; }
        public string? JobTitle { get; set; }
    }

    private List<Person> _people = new()
    {
        new() { Id = 1, Name = "Bob", Age = 30, JobTitle = "Developer" },
        new() { Id = 2, Name = "Alice", Age = 25, JobTitle = "Support" },
        new() { Id = 3, Name = "John", Age = 40, JobTitle = "Manager" },
        new() { Id = 4, Name = "Emily", Age = 35, JobTitle = "Marketing" },
        new() { Id = 5, Name = "David", Age = 28, JobTitle = "Sales" }
    };
}